# -*- coding: utf-8 -*-
"""
100daysofcode
"2_How to Clean_Explore Data_KLIB.ipynb"
create by @Bragatte ^202101062118
Automatically generated by Colaboratory.
Day 2
[Ref](https://colab.research.google.com/gist/BragatteMAS/bca4138ce3b9755f6fe8b16809d74522/how-to-clean_analysis-data_klib.ipynb
)   
#  Speed Up **Data Cleaning** and **exploratory** Data analysis
"""

!pip install klib

import klib
import pandas as pd

df = pd.read_csv("https://github.com/akanz1/klib/raw/main/examples/NFL_DATASET.csv",in)

df.head(3)

klib.missingval_plot(df)

"""## Data Cleaning
 The data_cleaning() is similar to drop.na, but extend for empty and single value columns, moreover duplicate rows.
"""

df_clean = klib.data_cleaning(df)

"""## Correlation Plot"""

klib.corr_plot(df_clean, annot=False) #annot true mades poluted

klib.corr_plot(df_clean, split='pos', annot=False) #split for positive corr

klib.corr_plot(df_clean, split='neg', annot=False) #split for negative corr

klib.corr_plot(df_clean, target="Touchdown") #corr with specific target

klib.corr_mat(df_clean) #global matrix

"""## Distribution Plot"""

klib.dist_plot(df_clean['Win_Prob'])

"""## Categorical Plot"""

klib.cat_plot(df, figsize=(50,15)) #df_clean works better on jupyterlab

"""## Save Plot as a PDF file"""

plot = klib.corr_plot(df_clean, annot=False, figsize=(12,10))

plot.figure.savefig('figure.pdf')

"""[klib_github](https://github.com/akanz1/klib/tree/main/examples)

[klib_medium](https://towardsdatascience.com/speed-up-your-data-cleaning-and-preprocessing-with-klib-97191d320f80)

[klib_docs](https://klib.readthedocs.io/en/latest/)
"""